##-*- Mode: sh -*-
##---------------------------------------------------------------------------##
## File  : environment/bashrc/.bashrc_cray
## Date  : Tuesday, May 31, 2016, 14:48 pm
## Author: Kelly Thompson
## Note  : Copyright (C) 2016-2020, Triad National Security, LLC.
##         All rights are reserved.
##
## Bash configuration file for Cray HPC machines.
##---------------------------------------------------------------------------##

#verbose=true

if test -n "$verbose"; then
   echo "In draco/environment/bashrc/.bashrc_cray"
fi

##---------------------------------------------------------------------------##
## ENVIRONMENTS
##---------------------------------------------------------------------------##

# Where is the vendor directory
if [[ ! ${VENDOR_DIR} ]]; then
   if test -d /usr/projects/draco/vendors; then
      VENDOR_DIR=/usr/projects/draco/vendors
   fi
fi

# shell options
# Do not escape $ for bash completion
shopt -s direxpand

# alias salloc='salloc --gres=craynetwork:0'

add_to_path $VENDOR_DIR/bin

# If LESS is set, is should include '-R' so that git diff's color
# displays correctly.
if [[ -n "${LESS}" ]]; then
  unset LESS
#  if test `echo $LESS | grep -c R` = 0; then
#    export LESS="${LESS} -R"
#  fi
fi

#
# Cray environment and options
#
# CRAY_CPU_TARGET=arm-thunderx2 ==> capulin, thunder
#

#
# OpenMP
#
# export OMP_PLACES=threads # lmdm says do not set this!

unset OMP_NUM_THREADS
if [[ ${CRAY_CPU_TARGET} =~ arm ]]; then
  export NRANKS_PER_NODE=56
elif [[ ${CRAY_CPU_TARGET} =~ haswell ]]; then
  export NRANKS_PER_NODE=32
elif [[ ${CRAY_CPU_TARGET} =~ knl ]]; then
  export NRANKS_PER_NODE=68
fi

# Support building cassio with ccsrad shared deployment repository.
if [[ -d /usr/projects/eap/users/ccsrad/Cassio.deployment ]]; then
  export TF_DEPLOYMENT_CLONES=/usr/projects/eap/users/ccsrad/Cassio.deployment
  export TF_SPACK_INSTANCES=/usr/projects/eap/users/ccsrad/spack_instances
fi

#
# MODULES
#

target="`uname -n | sed -e s/[.].*//`"
arch=`uname -m`

# Use modules found in the draco directory
sysname=`/usr/projects/hpcsoft/utilities/bin/sys_name`
module use --append /usr/projects/draco/Modules/$sysname
module load draco/intel19


if [[ ${SLURM_JOB_PARTITION} == "knl" ]]; then
  module swap craype-haswell craype-mic-knl
fi

#--------------------------------------------------------------------------------------------------#
# Trinity
#--------------------------------------------------------------------------------------------------#

function dracoenv ()
{
  if [[ ${CRAY_CPU_TARGET} =~ haswell ]] || [[ ${CRAY_CPU_TARGET} =~ knl ]]; then
    module unload gcc cray-libsci intel
    module load intel/19.0.4
  else
    module unload PrgEnv-cray gcc
    module load PrgEnv-gnu
  fi
  for m in $dracomodules; do
    module load $m
  done
#  if [[ `echo $LOADEDMODULES | grep -c hugepages` != 0 ]]; then
#    modname=`echo $LOADEDMODULES | sed -e 's/.*craype-hugepages/craype-hugepages/' | sed -e 's/[:].*//'`
#    module unload $modname
#  fi
  export CXX=CC
  export CC=cc
  export FC=ftn
  export CRAYPE_LINK_TYPE=dynamic
  export DRACO_OLD_LD_LIBRARY_PATH=LD_LIBRARY_PATH
  for dir in ${CRAY_LD_LIBRARY_PATH//:/ }; do
    # remove each directory listed in CRAY_LD_LIBRARY_PATH from LD_LIBRARY_PATH
    LD_LIBRARY_PATH=$(echo "$LD_LIBRARY_PATH" | sed -e 's%:${dir}%%')
    # Now prepend each $dir w/o respect to if it was removed above.
    LD_LIBRARY_PATH=$dir:$LD_LIBRARY_PATH
  done
  #  export MPIEXEC_EXECUTABLE=`which srun`
}
export -f dracoenv

function rmdracoenv ()
{
  # this setting recommended by Sam Guiterrez to allow correct core binding for
  # C++ threads (maybe OpeNMP threads also) on KNLs.
  export KMP_AFFINITY=disabled
  export LD_LIBRARY_PATH=$DRACO_OLD_LD_LIBRARY_PATH
  # unload in reverse order.
  mods=( ${dracomodules} )
  for ((i=${#mods[@]}-1; i>=0; i--)); do
    # loaded=`echo $LOADEDMODULES | grep -c ${mods[$i]}`
    #if test $loaded = 1; then
    module unload ${mods[$i]}
    #fi
  done
  if [[ ${CRAY_CPU_TARGET} =~ haswell ]] || [[ ${CRAY_CPU_TARGET} =~ knl ]]; then
    module unload intel
    module unload PrgEnv-intel
    module load PrgEnv-intel
  else
    module unload PrgEnv-gnu gcc
    module load PrgEnv-cray
  fi
}
export -f rmdracoenv

##---------------------------------------------------------------------------##
## end of .bashrc_cray
##---------------------------------------------------------------------------##
