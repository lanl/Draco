# -*-sh-*-
#------------------------------------------------------------------------------#
# File  : regression/valgrind_suppress.txt
# Date  : Friday, May 19, 2017, 10:26 am
# Author: Kelly Thompson <kgt@lanl.gov>
# Breif : Valgrind Suppression Instructions
# Note  : Copyright (C) 2016-2017, Los Alamos National Security, LLC.
#         All rights are reserved.
#------------------------------------------------------------------------------#
#
# Example valgrind use:
#
# valgrind -q --tool=memcheck --leak-check=full --show-reachable=yes
#   --trace-children=yes --num-callers=50 --gen-suppressions=all
#   --suppressions="$HOME/draco/regression/valgrind_suppress.txt"
#   mpirun -np 1 phw hello
#
# -------- OR --------
#
# ctest -D ExperimentalMemCheck -j 12 -R c4
#
#------------------------------------------------------------------------------#

## -------------------------------------------------------------------------- ##
## rhel7
## -------------------------------------------------------------------------- ##
{
   rhel7/e001
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:realloc
   ...
   fun:gomp_realloc
   ...
}
{
   rhel7/e002
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   ...
   fun:gomp_realloc
   ...
}
{
   rhel7/e003
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   ...
   fun:gomp_malloc
   ...
}
{
   rhel7/e004
   Memcheck:Leak
   match-leak-kinds: possible
   fun:calloc
   ...
   fun:pthread_create@@GLIBC_2.2.5
   ...
}
{
   rhel7/e005
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:__fopen_internal
   ...
}

## -------------------------------------------------------------------------- ##
## CMake
## -------------------------------------------------------------------------- ##

{
   ld/memcheck/leak
   Memcheck:Leak
   ...
   obj:/*/ld
   ...
}
{
   cmake/memcheck/leak
   Memcheck:Leak
   ...
   obj:/*/cmake
   ...
}
{
   as/memcheck/leak
   Memcheck:Leak
   ...
   obj:/*/as
   ...
}
{
   cmake/handle_braces/memleak
   Memcheck:Leak
   ...
   fun:handle_braces
   fun:do_spec_1
   ...
}
{
   cmake/process_command/memleak
   Memcheck:Leak
   ...
   fun:process_command
   ...
}
{
   cmake/find_a_file/memleak
   Memcheck:Leak
   ...
   fun:find_a_file
   ...
}
{
   cmake/_obstack_begin/memleak
   Memcheck:Leak
   ...
   fun:_obstack_begin
   ...
}
{
   cmake/xstrdup/memleak
   Memcheck:Leak
   ...
   fun:xstrdup
   ...
}
{
   cmake/decode_options/memleak
   Memcheck:Leak
   ...
   fun:decode_options
   ...
}
{
   cmake/concat/memleak
   Memcheck:Leak
   ...
   fun:concat
   ...
}
{
   cmake/main/xcalloc/memleak
   Memcheck:Leak
   fun:calloc
   fun:xcalloc
   fun:main
}
{
   cmake/main/malloc/cmake
   Memcheck:Leak
   ...
   obj:*/cmake
   ...
}

{

   Memcheck:Leak
   match-leak-kinds: definite
   fun:malloc
   ...
   fun:PMPI_Comm_dup
   ...
}

## ---------------------------------------------------------------------- ##
## Added with upgrade to valgrind 3.6.1
## ---------------------------------------------------------------------- ##

{
   ld217/e001
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:realloc
   ...
   obj:/usr/lib64/ld-2.17.so
}
{
   tstSP/condjump/ld25so
   Memcheck:Cond
   fun:index
   fun:expand_dynamic_string_token
   ...
   obj:/lib64/ld-2.5.so
   ...
}
{
   tstSP/condjump/ld25so
   Memcheck:Cond
   fun:_dl_relocate_object
   ...
   obj:/lib64/ld-2.5.so
   ...
}
{
   QueryEospac/condjump/ld25so1
   Memcheck:Cond
   fun:strlen
   ...
   obj:/lib/ld-2.5.so
}
{
   QueryEospac/condjump/ld25so2
   Memcheck:Cond
   fun:_dl_relocate_object
   ...
   obj:/lib/ld-2.5.so
}

{
   tstSP/condjump/ld212so
   Memcheck:Cond
   fun:index
   fun:expand_dynamic_string_token
   ...
   obj:/lib64/ld-2.12.so
   ...
}
{
   tstSP/condjump/ld212so
   Memcheck:Cond
   fun:_dl_relocate_object
   ...
   obj:/lib64/ld-2.12.so
   ...
}
{
   QueryEospac/condjump/ld212so1
   Memcheck:Cond
   fun:strlen
   ...
   obj:/lib/ld-2.12.so
}
{
   QueryEospac/condjump/ld212so2
   Memcheck:Cond
   fun:_dl_relocate_object
   ...
   obj:/lib/ld-2.12.so
}


## ---------------------------------------------------------------------- ##
## EOSPAC 6
## ---------------------------------------------------------------------- ##

{
   eospac/createtables/1
   Memcheck:Cond
   ...
   fun:eos_CreateTables
   ...
}
{
   eospac/createtables/2
   Memcheck:Value8
   ...
   fun:eos_CreateTables
   ...
}
{
   eospac/createtables/3
   Memcheck:Addr8
   ...
   fun:eos_CreateTables
   ...
}
{
   eospac/createtableseosdatamap/1
   Memcheck:Value8
   ...
   fun:eos_CreateTablesEosDataMap
   ...
}
{
   eospac/createtableseosdatamap/2
   Memcheck:Cond
   ...
   fun:eos_CreateTablesEosDataMap
   ...
}
{
   eospac/createtableseosdatamap/3
   Memcheck:Addr8
   ...
   fun:eos_CreateTablesEosDataMap
   ...
}

## ---------------------------------------------------------------------- ##
## Numdiff
## ---------------------------------------------------------------------- ##

# ==24572== Use of uninitialised value of size 8
# ==24572==    at 0x38B5024F8B: __gmpn_mul_basecase (in /usr/lib64/libgmp.so.3.3.3)
# ==24572==    by 0x38B501FB23: __gmpn_mul (in /usr/lib64/libgmp.so.3.3.3)
# ==24572==    by 0x38B5008661: __gmpf_set_str (in /usr/lib64/libgmp.so.3.3.3)
# ==24572==    by 0x4043D2: init_mpa (in /ccs/codes/radtran/vendors/numdiff-5.2.1/bin/numdiff)
# ==24572==    by 0x40ABB6: init_mpa_support (in /ccs/codes/radtran/vendors/numdiff-5.2.1/bin/numdiff)
# ==24572==    by 0x40BC6F: main (in /ccs/codes/radtran/vendors/numdiff-5.2.1/bin/numdiff)
{
   numdiff/uninit8/use
   Memcheck:Value8
   ...
   fun:init_mpa
   fun:init_mpa_support
   fun:main
}
# ==18912== Conditional jump or move depends on uninitialised value(s)
# ==18912==    at 0x38B501FB03: __gmpn_mul (in /usr/lib64/libgmp.so.3.3.3)
# ==18912==    by 0x38B5008661: __gmpf_set_str (in /usr/lib64/libgmp.so.3.3.3)
# ==18912==    by 0x4043D2: init_mpa (in /ccs/codes/radtran/vendors/numdiff-5.2.1/bin/numdiff)
# ==18912==    by 0x40ABB6: init_mpa_support (in /ccs/codes/radtran/vendors/numdiff-5.2.1/bin/numdiff)
# ==18912==    by 0x40BC6F: main (in /ccs/codes/radtran/vendors/numdiff-5.2.1/bin/numdiff)
{
   <insert_a_suppression_name_here>
   Memcheck:Cond
   ...
   fun:__gmpf_set_str
   fun:init_mpa
   fun:init_mpa_support
   fun:main
}
{
   <insert_a_suppression_name_here>
   Memcheck:Value8
   fun:__gmpn_mul_basecase
   ...
}
{
   <insert_a_suppression_name_here>
   Memcheck:Cond
   fun:__gmpn_mul_basecase
   ...
}
{
   <insert_a_suppression_name_here>
   Memcheck:Cond
   ...
   fun:init_mpa_support
   ...
}
{
   <insert_a_suppression_name_here>
   Memcheck:Value8
   fun:__gmpn_sqr_basecase
   ...
}
{
   <insert_a_suppression_name_here>
   Memcheck:Value8
   fun:__gmpn_sqr_n
}
{
   <insert_a_suppression_name_here>
   Memcheck:Cond
   ...
   fun:__gmpn_divrem
   ...
}

{
   numdiff/lost/04
   Memcheck:Leak
   match-leak-kinds: definite
   fun:malloc
   fun:bc_new_num
   fun:bc_a2num
   fun:str2C
   fun:field2cx
   fun:cmp_fields
   fun:cmp_lines
   fun:cmp_files
   fun:main
}
{
   numdiff/lost/05
   Memcheck:Leak
   match-leak-kinds: definite
   fun:malloc
   fun:bc_new_num
   fun:bc_sub
   fun:Csub
   fun:cmp_fields
   fun:cmp_lines
   fun:cmp_files
   fun:main
}
{
   numdiff/lost/06
   Memcheck:Leak
   match-leak-kinds: definite
   fun:malloc
   fun:bc_new_num
   fun:bc_divide
   fun:divide
   fun:cmp_fields
   fun:cmp_lines
   fun:cmp_files
   fun:main
}



#===================== text compare =============================================#

# ==18889== Conditional jump or move depends on uninitialised value(s)
# ==18889==    at 0x38B5007F48: __gmpf_set (in /usr/lib64/libgmp.so.3.3.3)
# ==18889==    by 0x404740: Cabs (in /ccs/codes/radtran/vendors/numdiff-5.2.1/bin/numdiff)
# ==18889==    by 0x4052C8: cmp_fields (in /ccs/codes/radtran/vendors/numdiff-5.2.1/bin/numdiff)
# ==18889==    by 0x405CD2: cmp_lines (in /ccs/codes/radtran/vendors/numdiff-5.2.1/bin/numdiff)
# ==18889==    by 0x40646B: cmp_files (in /ccs/codes/radtran/vendors/numdiff-5.2.1/bin/numdiff)
# ==18889==    by 0x40BE6C: main (in /ccs/codes/radtran/vendors/numdiff-5.2.1/bin/numdiff)
{
   numdiff/text1
   Memcheck:Cond
   ...
   fun:cmp_fields
   fun:cmp_lines
   fun:cmp_files
   fun:main
}
# ==18881== Use of uninitialised value of size 8
# ==18881==    at 0x38B500C9FD: __gmpf_cmp (in /usr/lib64/libgmp.so.3.3.3)
# ==18881==    by 0x4048BB: cmp (in /ccs/codes/radtran/vendors/numdiff-5.2.1/bin/numdiff)
# ==18881==    by 0x4052DB: cmp_fields (in /ccs/codes/radtran/vendors/numdiff-5.2.1/bin/numdiff)
# ==18881==    by 0x405CD2: cmp_lines (in /ccs/codes/radtran/vendors/numdiff-5.2.1/bin/numdiff)
# ==18881==    by 0x40646B: cmp_files (in /ccs/codes/radtran/vendors/numdiff-5.2.1/bin/numdiff)
# ==18881==    by 0x40BE6C: main (in /ccs/codes/radtran/vendors/numdiff-5.2.1/bin/numdiff)
{
   numdiff/text/2
   Memcheck:Value8
   ...
   fun:cmp_fields
   fun:cmp_lines
   fun:cmp_files
   fun:main
}
# ==18871== Use of uninitialised value of size 8
# ==18871==    at 0x38B501E9C0: __gmpn_divrem_1 (in /usr/lib64/libgmp.so.3.3.3)
{
   numdiff/text/3
   Memcheck:Value8
   ...
   fun:__gmpn_divrem_1
   ...
}
# ==25358== Use of uninitialised value of size 8
# ==25358==    at 0x38B501E9C0: __gmpn_divrem_1 (in /usr/lib64/libgmp.so.3.3.3)
{
   numdiff/text/4
   Memcheck:Value8
   ...
   fun:__gmpn_divrem
   ...
}
{
   numdiff/lost/03
   Memcheck:Leak
   match-leak-kinds: definite
   fun:malloc
   fun:bc_new_num
   fun:bc_init_numbers
   fun:init_mpa
   fun:init_mpa_support
   fun:main
}
{
   numdiff/lost/04
   Memcheck:Leak
   match-leak-kinds: definite
   fun:calloc
   fun:process_substring
   fun:get_separating_string
   ...
}

#==================== F90 open/read/write errors ====================#
{
   fortran/open
   Memcheck:Addr8
   fun:for__add_to_lf_table
   fun:for__open_proc
   fun:for_open
   ...
}
{
   fortran/read/1
   Memcheck:Cond
   fun:for__nml_lex
   fun:for_read_seq_nml
   ...
}
{
   fortran/write/1
   Memcheck:Cond
   ...
   fun:_gfortrani_write_i
   ...
}
{
   fortran/parse/1
   Memcheck:Addr8
   fun:__strncmp_sse42
   fun:_gfortrani_parse_format
   fun:data_transfer_init
   ...
}
{
   fortran/write_integer/1
   Memcheck:Value8
   ...
   fun:write_integer
   fun:_gfortrani_list_formatted_write
   ...
}
{
   fortran/write_integer/1
   Memcheck:Cond
   ...
   fun:_gfortrani_list_formatted_write
   ...
}
{
   fortran/st_write_done/1
   Memcheck:Cond
   ...
   fun:_gfortran_st_write_done
   ...
}
{
   fortran/st_write_done/2
   Memcheck:Value8
   fun:_gfortrani_next_record
   fun:_gfortran_st_write_done
   fun:MAIN__
   fun:main
}

{
   <insert_a_suppression_name_here>
   Memcheck:Cond
   fun:_gfortrani_fbuf_alloc
   fun:_gfortrani_write_block
   fun:_gfortrani_write_a
   fun:formatted_transfer
   ...
}

#================ libc problems =====================================#
# See https://bugzilla.redhat.com/show_bug.cgi?id=629976
# This only shows up for fortran main().
{
   libc/free/error/below/main/1
   Memcheck:Free
   fun:free
   fun:free_mem
   fun:__libc_freeres
   fun:_vgnU_freeres
   fun:exit
   fun:(below main)
}

#=============== C++ string issues (gcc-4.8.1) ===============#

{
   # Memcheck:Cond
   # fun:__strlen_sse42
   # fun:std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
   gcc481/basic_string/strlen/1
   Memcheck:Cond
   fun:__strlen_sse42
   fun:_ZNSsC1EPKcRKSaIcE
   ...
}
{
   gcc481/basic_string/strlen/2
   Memcheck:Addr8
   fun:__strlen_sse42
   fun:_ZNSsC1EPKcRKSaIcE
   ...
}
{
   # Memcheck:Cond
   # fun:char* std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)
   # fun:std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
   gcc481/basic_string/S_construct/1
   Memcheck:Cond
   ...
   fun:_ZNSsC1EPKcRKSaIcE
   ...
}

{
   gcc481/basic_string/S_construct/3
   # Memcheck:Value8
   # fun:memcpy
   # fun:char* std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)
   # fun:std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
   Memcheck:Value8
   ...
   fun:_ZNSsC1EPKcRKSaIcE
   ...
}
{
   gcc481/basic_string/notequal/1
   # fun:bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
   Memcheck:Cond
   ...
   fun:_ZStneIcSt11char_traitsIcESaIcEEbRKSbIT_T0_T1_ES8_
   ...
}
{
   gcc481/basic_string/notequal/2
   # fun:bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
   Memcheck:Value8
   ...
   fun:_ZStneIcSt11char_traitsIcESaIcEEbRKSbIT_T0_T1_ES8_
   ...
}
{
   gcc481/basic_string/operatorplus/1
   # fun:std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
   Memcheck:Value8
   ...
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_EOS6_RKS6_
   ...
}
{
   gcc481/basic_string/operatorplus/2
   # fun:std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
   Memcheck:Cond
   ...
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_EOS6_RKS6_
   ...
}
{
   gcc481/basic_string/operatorplus/3
   Memcheck:Cond
   ...
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_EOS6_S3_
   ...
}
{
   gcc481/basic_string/operatorplus/4
   Memcheck:Value8
   ...
   fun:_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_EOS6_S3_
   ...
}
{
   gcc481/basic_ostream/insert/1
   Memcheck:Cond
   # fun:std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)
   fun:_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
   ...
}
{
   gcc481/basic_ostream/insert/2
   # fun:std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)
   Memcheck:Cond
   ...
   fun:_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
   ...
}
{
   gcc481/basic_ostream/insert/3
   # fun:std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)
   Memcheck:Value8
   ...
   fun:_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
   ...
}
{
   gcc481/basic_ostream/endl/1
   Memcheck:Cond
   ...
   fun:_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
   ...
}
{
   gcc481/basic_ostream/endl/1
   Memcheck:Value8
   ...
   fun:_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
   ...
}
{
   gcc481/basic_ostream/operatorlessless/1
   Memcheck:Addr8
   ...
   fun:_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
   ...
}
{
   gcc481/basic_ostream/operatorlessless/2
   Memcheck:Cond
   ...
   fun:_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
   ...
}
{
   gcc481/basic_ostream/str/1
   Memcheck:Cond
   fun:_ZNKSt19basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv
   ...
}
{
   gcc481/basic_ostream/str/2
   Memcheck:Value8
   ...
   fun:_ZNKSt19basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv
   ...
}
{
   gcc481/basic_ostringstream/str/3
   Memcheck:Cond
   ...
   fun:_ZNKSt19basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv
   ...
}
{
   gcc481/strcmp/1
   Memcheck:Addr8
   fun:__strcmp_sse42
   ...
}
{
   gcc481/back_insert_operator/1
   Memcheck:Value8
   ...
   fun:_ZSt9transformIN9__gnu_cxx17__normal_iteratorIPSsSt6vectorISsSaISsEEEESt20back_insert_iteratorIS3_IPcSaIS8_EEEPFS8_RKSsEET0_T_SH_SG_T1_
   ...
}
{
   gcc481/back_insert_operator/2
   Memcheck:Addr8
   ...
   fun:_ZSt9transformIN9__gnu_cxx17__normal_iteratorIPSsSt6vectorISsSaISsEEEESt20back_insert_iteratorIS3_IPcSaIS8_EEEPFS8_RKSsEET0_T_SH_SG_T1_
   ...
}
{
   gcc481/back_insert_operator/3
   Memcheck:Cond
   ...
   fun:_ZSt9transformIN9__gnu_cxx17__normal_iteratorIPSsSt6vectorISsSaISsEEEESt20back_insert_iteratorIS3_IPcSaIS8_EEEPFS8_RKSsEET0_T_SH_SG_T1_
   ...
}


#------------------------------------------------------------------------------#
# Import OpenMPI's openmpi-valgrind.supp
# Openmpi-2.1.0
#
# ccs-net: /scratch/vendors/spack.20170502/opt/spack/linux-rhel7-x86_64/gcc-6.3.0/openmpi-2.1.0-vrj55htfsolpnbtjv63xzh3jnl4kly3k/share/openmpi/openmpi-valgrind.supp
#------------------------------------------------------------------------------#
###############################################################
#
# OPAL suppressions
#
###############################################################

# weirdness in init routines on Gentoo
{
  linux_pthread_init
  Memcheck:Leak
  fun:calloc
  fun:allocate_dtv
  fun:_dl_allocate_tls_storage
  fun:_dl_allocate_tls
}
{
  linux_pthread_init2
  Memcheck:Leak
  fun:calloc
  fun:_dl_tls_setup
  fun:__pthread_initialize_minimal
}
{
  linux_pthread_init3
  Memcheck:Leak
  fun:memalign
  fun:_dl_allocate_tls_storage
  fun:_dl_allocate_tls
  fun:__pthread_initialize_minimal
}

# The event library leaves some blocks in use that we should clean up,
# but it would require much changing of the event library, so it
# really isn't worth it...
{
  event_lib_poll
  Memcheck:Leak
  fun:malloc
  fun:realloc
  fun:opal_realloc
  fun:poll_dispatch
}


###############################################################
#
# ORTE suppressions
#
###############################################################

# inet_ntoa on linux mallocs a static buffer.  We can't free
# it, so we have to live with it
{
  linux_inet_ntoa
  Memcheck:Leak
  fun:malloc
  fun:inet_ntoa
}
{
  linux_inet_ntoa_thread
  Memcheck:Leak
  fun:calloc
  fun:pthread_setspecific
  fun:inet_ntoa
}


###############################################################
#
# OMPI suppressions
#
###############################################################
{
  tcp_send
  Memcheck:Param
  writev(vector[...])
  fun:writev
  fun:mca_btl_tcp_frag_send
  fun:mca_btl_tcp_endpoint_send
}

###############################################################
#
# Suppressions for various commonly-used packages
#
###############################################################

# Portals reference implementation has a read from invalid issue
{
  portals_send
  Memcheck:Param
  socketcall.send(msg)
  fun:send
  fun:utcp_sendbytes
  fun:utcp_sendto
  fun:utcp_msg_wait
}

#------------------------------------------------------------------------------#
# Openmpi-2.1.0 (added by KT)
#------------------------------------------------------------------------------#

{
   openmpi210/e001
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   ...
   fun:PMPI_Init_thread
   ...
}
{
   openmpi210/e001a
   Memcheck:Leak
   match-leak-kinds: definite
   fun:malloc
   ...
   fun:PMPI_Init_thread
   ...
}
{
   openmpi210/e001b
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   ...
   fun:PMPI_Init_thread
   ...
}
{
   openmpi210/e001ba
   Memcheck:Leak
   match-leak-kinds: indirect
   fun:malloc
   ...
   fun:PMPI_Init_thread
   ...
}
{
   openmpi210/e001c
   Memcheck:Leak
   match-leak-kinds: indirect
   fun:calloc
   ...
   fun:PMPI_Init_thread
   ...
}
{
   openmpi210/e001d
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:calloc
   ...
   fun:PMPI_Init_thread
   ...
}
{
   openmpi210/e001d
   Memcheck:Leak
   match-leak-kinds: possible
   fun:calloc
   ...
   fun:PMPI_Init_thread
   ...
}
{
   openmpi210/e001d
   Memcheck:Leak
   match-leak-kinds: indirect
   fun:realloc
   ...
   fun:PMPI_Init_thread
   ...
}
{
   openmpi210/e001e
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:realloc
   ...
   fun:PMPI_Init_thread
   ...
}
{
   openmpi210/e002
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:realloc
   ...
   fun:orterun
   ...
}
{
   openmpi210/e003
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:strdup
   ...
   fun:orterun
   ...
}
{
   openmpi210/e0004p
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   ...
   fun:progress_engine
   fun:start_thread
   ...
}
{
   openmpi210/e0004
   Memcheck:Leak
   match-leak-kinds: definite
   fun:malloc
   ...
   fun:progress_engine
   fun:start_thread
   ...
}
{
   openmpi210/e0004a
   Memcheck:Leak
   match-leak-kinds: indirect
   fun:malloc
   ...
   fun:progress_engine
   fun:start_thread
   ...
}
{
   openmpi210/e0004b
   Memcheck:Leak
   match-leak-kinds: indirect
   fun:calloc
   ...
   fun:progress_engine
   fun:start_thread
   ...
}
{
   openmpi210/e0004c
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   ...
   fun:start_thread
   ...
}
{
   openmpi210/e0004d
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   ...
   fun:progress_engine
   fun:start_thread
   ...
}
{
   openmpi210/e0005
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:realloc
   ...
   fun:progress_engine
   fun:start_thread
   ...
}
{
   openmpi210/e0005a
   Memcheck:Leak
   match-leak-kinds: possible
   fun:realloc
   ...
   fun:progress_engine
   fun:start_thread
   ...
}
{
   openmpi210/e0005
   Memcheck:Leak
   match-leak-kinds: definite
   fun:realloc
   ...
   fun:progress_engine
   fun:start_thread
   ...
}
{
   openmpi210/e0005a
   Memcheck:Leak
   match-leak-kinds: indirect
   fun:realloc
   ...
   fun:progress_engine
   fun:start_thread
   ...
}
{
   openmpi210/e0006
   Memcheck:Leak
   match-leak-kinds: definite
   fun:calloc
   ...
   fun:orterun
   ...
}
{
   openmpi210/e0007
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:calloc
   ...
   fun:orterun
   ...
}
{
   openmpi210/e0007
   Memcheck:Leak
   match-leak-kinds: indirect
   fun:calloc
   ...
   fun:orterun
   ...
}
{
   openmpi210/e0008
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   ...
   fun:orterun
   ...
}
{
   openmpi210/e0009
   Memcheck:Leak
   match-leak-kinds: definite
   fun:malloc
   ...
   fun:orterun
   ...
}
{
   openmpi210/e0009a
   Memcheck:Leak
   match-leak-kinds: definite
   fun:realloc
   ...
   fun:orterun
   ...
}
{
   openmpi210/e0010
   Memcheck:Leak
   match-leak-kinds: indirect
   fun:malloc
   ...
   fun:orterun
   ...
}
{
   openmpi210/e0011
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   ...
   fun:orterun
   ...
}
{
   openmpi210/e0012
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   ...
   fun:PMPI_Recv
   ...
}
{
   openmpi210/e0013
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   ...
   fun:PMPI_Send
   ...
}
{
   openmpi210/e0014
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   ...
   fun:PMPI_Irecv
   ...
}
{
   openmpi210/e0014
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   ...
   fun:PMPI_Gather
   ...
}
{
   openmpi210/e0015
   Memcheck:Cond
   ...
   fun:orterun
   ...
}
{
   openmpi210/e0016
   Memcheck:Leak
   match-leak-kinds: definite
   fun:malloc
   ...
   fun:PMPI_Init
   ...
}
{
   openmpi210/e0017
   Memcheck:Leak
   match-leak-kinds: definite
   fun:malloc
   ...
   fun:PMPI_Comm_create
   ...
}
{
   openmpi210/e0018
   Memcheck:Leak
   match-leak-kinds: definite
   fun:malloc
   ...
   fun:PMPI_Comm_split
   ...
}
{
   openmpi210/e0019
   Memcheck:Leak
   match-leak-kinds: definite
   fun:malloc
   ...
   fun:PMPI_Comm_dup
   ...
}
{
   openmpi210/e0019
   Memcheck:Leak
   match-leak-kinds: definite
   fun:malloc
   ...
   fun:PMPI_Win_create
   ...
}

#------------------------------------------------------------------------------#
# Python 2.7
#------------------------------------------------------------------------------#
{
   python/e001
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:calloc
   fun:dictresize
   ...
}
{
   python/e002
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   ...
}
{
   python/e002b
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   fun:_PyObject_GC_Malloc
   ...
}
{
   python/e003
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:calloc
   ...
   fun:dlopen@@GLIBC_2.2.5
   ...
}
{
   python/e004
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   ...
   fun:Py_Main
   ...
}
{
   python/e004a
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   ...
   fun:Py_Main
   ...
}
{
   python/e004b
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:realloc
   ...
   fun:Py_Main
   ...
}
{
   python/e005
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   ...
   fun:import_submodule
   ...
}
{
   python/e006
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   ...
   fun:PyObject_Call
   ...
}
{
   python/e007
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:realloc
   ...
   fun:PyObject_Call
   ...
}
{
   python/e008
   Memcheck:Addr4
   fun:PyObject_Free
   ...
}
{
   python/e009
   Memcheck:Addr4
   fun:PyObject_Realloc
   ...
}
{
   python/e010
   Memcheck:Value8
   fun:PyObject_Free
   ...
}
{
   python/e010a
   Memcheck:Value8
   fun:PyObject_Realloc
   ...
}
{
   python/e011
   Memcheck:Cond
   fun:PyObject_Free
   ...
}
{
   python/e011
   Memcheck:Cond
   fun:PyObject_Realloc
   ...
}

#------------------------------------------------------------------------------#
# End valgrind_suppress.txt
#------------------------------------------------------------------------------#
