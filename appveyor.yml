---
version: 1.0.{build}
# Don't build when repository is tagged.
skip_tags: true
max_jobs: 1
image: Visual Studio 2019
clone_depth: 3

environment:
  OMP_NUM_THREADS: 4
  VENDOR_DIR: c:\projects\win32-vs16-tools
  # Add numdiff, ndselect to PATH
  # Add gfortran's runtime dll's to PATH
  PATH: c:\projects\win32-vs16-tools\bin;$(PATH);c:\msys64\mingw64\bin
  VCPKGDIR: C:\Tools\vcpkg
  GENERATOR: "Visual Studio 16 2019"
  CMAKE_OPTIONS: "-Wno-dev -DCMAKE_TOOLCHAIN_FILE=%VENDOR_DIR%\\vs2019-toolchain.cmake"
  CMAKE_CXX_FLAGS: "/WX"
  CMAKE_C_FLAGS: "/WX"
  MDL: "https://download.microsoft.com/download"
  #-DCMAKE_VERBOSE_MAKEFILE=ON"
  #QTDIR: c:\Qt\5.14.0
  #PATH+=c:\Qt\5.14.0\bin

  matrix:
    - BUILD_TYPE: Debug
      C4_OPTS: SCALAR

    - BUILD_TYPE: Debug
      C4_OPTS: MPI

    - BUILD_TYPE: Release
      C4_OPTS: MPI

# Notes: https://github.com/KineticTheory/Linux-HPC-Env/wiki/TPL-installs-via-vcpkg

install:
  # we start at $(APPVEYOR_BUILD_FOLDER) = c:\projects\draco-2th1a
  # Install MS-MPI
  - curl -L -o msmpisetup.exe ${MDL}/A/E/0/AE002626-9D9D-448D-8197-1EA510E297CE/msmpisetup.exe
  - msmpisetup.exe -unattend
  # - This zip file provides:
  #   . vcpkg port files for random123 and eospac.
  #   . prebuilt vcpkg installs of gsl openblas metis, msmpi, parmetis, eospac,
  #     and random123.
  #   . numdiff is in the 'bin' directory,
  #   . The vs2019-toolchain.cmake file used by this script.
  - cd \projects
  - curl -L -o win32-vs16-tools.zip https://github.com/lanl/Draco/wiki/win32-vs16-tools.zip
  - dir win32-vs16-tools.zip
  - 7z.exe -y x win32-vs16-tools.zip
  - xcopy %VENDOR_DIR%\ports\* %VCPKGDIR%\ports /E /Y /I /Q
  - xcopy %VENDOR_DIR%\installed\* %VCPKGDIR%\installed /E /Y /I /Q
  # After the above xcopy, all of these should be 'already installed'
  #- vcpkg --triplet x64-windows install gsl metis openblas msmpi parmetis random123 eospac
  - vcpkg list
  # Install some packages via chocolatey
  #- cinst doxygen.install
  #- cinst dia
  #- cinst graphviz
  # Fix a few issues
  - if EXIST "C:\Program Files\Git\usr\bin\sh.exe" ( del /F "C:\Program Files\Git\usr\bin\sh.exe" )
  # Fix bugs in cmake-3.16.2
  - xcopy %VENDOR_DIR%\cmake\* "C:\Program Files (x86)\CMake\share\cmake-3.16\Modules\Platform" \
    /E /Y /I /Q

matrix:
  fast_finish: true

build_script:
  - cd \projects
  - mkdir build
  - cd build
  - echo cmake -G "%GENERATOR%" -A x64 %CMAKE_OPTIONS% -DDRACO_C4=%C4_OPTS% %APPVEYOR_BUILD_FOLDER%
  - cmake -G "%GENERATOR%" -A x64 %CMAKE_OPTIONS% -DDRACO_C4=%C4_OPTS% %APPVEYOR_BUILD_FOLDER%
  - echo cmake --build . --config %BUILD_TYPE% -j %NUMBER_OF_PROCESSORS%
  - cmake --build . --config %BUILD_TYPE% -j %NUMBER_OF_PROCESSORS%
  - echo ctest -C %BUILD_TYPE% -j 2 --output-on-failure
  - ctest -C %BUILD_TYPE% -j %NUMBER_OF_PROCESSORS% --output-on-failure

#build:
#  verbosity: minimal
